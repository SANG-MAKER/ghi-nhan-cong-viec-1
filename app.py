import streamlit as st
import json
import os
import pandas as pd
import io
from datetime import datetime, timedelta
import plotly.express as px

st.set_page_config(page_title="üìã Ghi nh·∫≠n c√¥ng vi·ªác", page_icon="‚úÖ", layout="wide")
st.title("üìã Ghi nh·∫≠n c√¥ng vi·ªác")
st.markdown("·ª®ng d·ª•ng ghi nh·∫≠n v√† b√°o c√°o c√¥ng vi·ªác chuy√™n nghi·ªáp d√†nh cho nh√≥m ho·∫∑c c√° nh√¢n.")

DATA_FILE = "tasks.json"
tasks = []

# ƒê·ªçc d·ªØ li·ªáu
if os.path.exists(DATA_FILE):
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            tasks = json.load(f)
    except json.JSONDecodeError:
        st.warning("‚ö†Ô∏è File d·ªØ li·ªáu b·ªã l·ªói. ƒêang kh·ªüi t·∫°o l·∫°i danh s√°ch tr·ªëng.")
        tasks = []

# --- Bi·ªÉu m·∫´u ghi nh·∫≠n ---
with st.form("task_form"):
    st.markdown("### üë§ Th√¥ng tin ng∆∞·ªùi th·ª±c hi·ªán")
    name = st.text_input("T√™n ng∆∞·ªùi th·ª±c hi·ªán")
    department = st.text_input("Ph√≤ng ban")

    st.markdown("### üìÅ Th√¥ng tin c√¥ng vi·ªác")
    project = st.selectbox("D·ª± √°n", options=["D·ª± √°n 43DTM", "D·ª± √°n VVIP", "D·ª± √°n GALERY"])
    category = st.selectbox("H·∫°ng m·ª•c", options=["Thi·∫øt k·∫ø", "Mua s·∫Øm", "Gia c√¥ng", "V·∫≠n chuy·ªÉn", "L·∫Øp d·ª±ng"])
    task = st.text_area("N·ªôi dung c√¥ng vi·ªác")
    note = st.text_area("Ghi ch√∫")

    st.markdown("### ‚è∞ Th·ªùi gian th·ª±c hi·ªán")
    date = st.date_input("Ng√†y th·ª±c hi·ªán", value=datetime.today())
    time = st.time_input("Th·ªùi gian b·∫Øt ƒë·∫ßu", value=datetime.now().time())
    repeat = st.number_input("S·ªë l·∫ßn th·ª±c hi·ªán", min_value=1, step=1, value=1)

    st.markdown("### ‚òëÔ∏è Tr·∫°ng th√°i c√¥ng vi·ªác")
    status = st.radio("Tr·∫°ng th√°i", options=["Ho√†n th√†nh", "ƒêang th·ª±c hi·ªán", "Ch·ªù duy·ªát", "Ng∆∞ng ch·ªù", "B·ªè"])

    submitted = st.form_submit_button("‚úÖ Ghi nh·∫≠n")
    if submitted:
        new_task = {
            "name": name.strip(),
            "department": department.strip(),
            "project": project,
            "category": category,
            "task": task.strip(),
            "note": note.strip(),
            "date": str(date),
            "time": time.strftime("%H:%M"),
            "repeat": repeat,
            "status": status
        }
        tasks.append(new_task)
        with open(DATA_FILE, "w", encoding="utf-8") as f:
            json.dump(tasks, f, ensure_ascii=False, indent=2)
        st.success("üéâ C√¥ng vi·ªác ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n!")
        st.experimental_rerun()


